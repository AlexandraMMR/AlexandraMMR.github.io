GitHub Universe is a global conference that brings together the people who are changing the world through software. 
It invites you to join a community connected by code and turn ideas into innovations!


The conference had sessions, break-out talks, and expert panels covering technical topics and big ideas alike across five tracks: enterprise, open source, ecosystem, skills, and product. It happens in SF, at the Palace of Fine Arts, which is an amazing venue. I also got to do a 3 hour touristy tour of SF, being my first time in the US and got some lovely weather for it (smile) 

Ignite > 2019/11/29 > GitHub Universe 2019 Conference Highlights > IMG_20191115_170431_1.jpgIgnite > 2019/11/29 > GitHub Universe 2019 Conference Highlights > IMG_20191115_164459.jpgIgnite > 2019/11/29 > GitHub Universe 2019 Conference Highlights > IMG_20191115_160328.jpgIgnite > 2019/11/29 > GitHub Universe 2019 Conference Highlights > MVIMG_20191113_074206.jpgIgnite > 2019/11/29 > GitHub Universe 2019 Conference Highlights > IMG_20191113_063416.jpgIgnite > 2019/11/29 > GitHub Universe 2019 Conference Highlights > IMG_20191116_133157.jpg









They also had 2 keynotes where they announced new features and products, including their GitHub Security Lab (https://github.blog/2019-11-14-announcing-github-security-lab-securing-the-worlds-code-together/) where JP Morgan are joining in this effort, donating their time and expertise to find and report vulnerabilities in open source software. (star)

I took a lot of notes, but will only cover the my favorite talks and the ones I learnt from the most. You will notice a theme of community, code and improvement among my choices, but you can watch the keynote replays and see the full schedule here: https://githubuniverse.com/watch/#day-1, also some of the sessions will be on YouTube too!

Social sector and Open Source
Gina Assaf - Digital Design and Research Consultant for Social and Global Impact & Good, Independent Consultant
Mala Kumar - Program Manager, Open Source for Good, GitHub
John Jones - Vice President of Interactive Strategies, The Case Foundation
The open source ecosystem, which includes software products, data and methodologies, is a driving force behind many breakthrough achievements in digital technology within the private sector. However, for nonprofits, international aid organizations and others in the social sector, open source adoption remains weak despite its massive potential to improve how the industry functions. In this session you’ll hear about GitHub’s new Open Source for Good program, the specific challenges in OS adoption by social sector, examples of nonprofits that are successfully implementing large scale OS projects and how GitHub can better support OS adoption by the social sector in the future.

"How can we help social organizations engage with Open Source?" - We know a lot about the social sector and about Open Source, so they did research in the area that overlaps between the two, into mission, geography, language, org structures, trying to find models.

Challenges and opportunities the social sector has in producing open source software that we looked at in our research:

Everything is rooted in user-centred design (Producer, Funder, Consumer, Advocate) from low to high engagement
Quantitative and qualitative research
Decision making power and open source knowledge in the social sector (there is a discrepancy between using and contributing back)
Early insights revealed that the Social Sector looks at custom build software mostly, and Open Source can be a viable solution. The Social Sector contributors to Open Source tend to fork but not contribute back. Once a Social Sector project has built up a great community, but it's unclear how to manage beyond resource and funding. They have communities of best practiced in the Social Sector for everything, except Software Development! 

Some wishes for the Open Source community in the Social Sector: Reach community through a common tech need and social cause, better ways to manage the community they create and remembering that Open Source is Philanthropy.


Panel: Women in Open Source
Nithya Ruff - Head of Open Source, Comcast
Veronica Young - Brigade Program Manager, Code for America
Nakeema Stefflbauer - Founder & CEO, FrauenLoop
Olivia Vereha - Chief Operations Officer, Code for Romania
Kay Alave - Consultant / Data Analyst, TD Reply
How can we ensure that we are creating communities that are diverse, inclusive, and most importantly, provide a sense of belonging to all their members? This panel brings together women doing amazing things in the world of Open Source, to share stories about their struggles, their unique experiences and viewpoints, and how these narratives have brought about positive change for the world.

Why is diversity important in Open Source:

severe technologist shortage globally
studies have proved that we need diverse tech
tech is one of the best paths for empowerment and freedom
There are challenges in attracting diverse talent and hiring them in organizations as well as maintaining them in tech. How do you do this, in your orgs? Try to make your work visible so others are encouraged by it, be welcoming to new joiners. Also, keep thinking and saying "You too can do this!"; "I want the company" and "I too can do it". Open source no one is familiar with Git, GitHub if outside tech, but it is mandatory to get into OS and then find a project to contribute on.

It's difficult to join the OS community if you don't have a human to help you along the way, so be that human!


Building Open Source communities of starfish
Ben Greenberg - Developer Advocate, Nexmo
As the world of open source software has exploded and more people enter the field, essential questions around good communication, boundaries of time and space, and how to work on a shared project across cultures, languages, and geography arise. How can we make sure that new contributors who arrive at a project through Hacktoberfest feel inspired to stay? How can we make sure that maintainers, who are already overburdened and overworked, are given the proper tools to do their sometimes thankless work? As a developer who spent ten years working in the fields of non-project management, counseling, and community organizing, Ben will share some strategies on how to create a more holistic environment where everyone thrives, based on lessons sociologists and researchers have learned from starfish and spider communities.

Writing good code can be challenging but so can collaboration, the easiest way to teach someone is a cycle of Tell→ Show→ Involve = Understand!

Your focus should be:

Diagnose problem: Communications is the way we communicate but also when anger meets the internet, it goes kaboom! Think about communication but also time, what does hacktoberfest do to maintainers time, where they need to go and review commits for a tshirt? Time is a limited resource. How many areas and skills in Open Source you should have or clear pathways for involvement, there are none really.
Offer strategies: The starfish and the spider book, is a really interesting one. Starfish are neural networks and can divide and regrow, without dying. Our communities should be more like starfish:
Decentralisation of communities (chaos/intense creativity)
Turn hierarchy into starfish arms, and let them grow
KISS -  keep it stupid simple, make it so anyone can join and take part
Reduce the jargon that creates barriers to entry. Boil it down to what do you want people to: know, do, and care about (why should they?).
Sometimes and ad says it all
Open systems can easily mutate
Scalability (a successful product may not be scalable, a successful process always is)
Everyone contributes, a great example is Wikipedia
Adaptability
Pull it to practice: then make it happen, enable it with your process, product and community.
The city guide to open source: What can cities teach software communities about governance, funding, managing limited resources, and scaling?
Devon Zuegel - Product Manager of the Open Source Economy Team, GitHub
What can cities teach open source about governance, funding, and managing limited resources?
In this talk, we'll take a stroll through von Haussmann's Paris, the subways of NYC and Hong Kong, the streets of Singapore, and modern day San Francisco. We'll look at how the long history of the design, maintenance, economics, and politics of physical infrastructure can inform how we approach our digital infrastructure—and where we'll need to draw a new map for ourselves. A full detailed article is at https://increment.com/open-source/the-city-guide-to-open-source/, that was what the talk is founded on by Devon (smile) 

How to make decisions:
Different types of decision making in cities and software, it can be a one man band like for the elm project, or a committee power like for JS. We need to include more people from the community in the decision process to make sure we are doing it for the community.
How to secure funding:
An example here was NYC subway, that is really used but has no investment, similar to Open Source projects. 
At the same time the Hong Kong subway is used just as much but is a super great one, because they use a value capture mechanism. They make money when they create value, because they buy the land near where they develop new stations and build on it, so they get revenue from investing in the areas that they know will become popular when the subway opens. Open Source should think in these terms too, we now see OS as a freebie, but if we don't put money in, we won't be able to keep taking out!
How to manage congestion:
Bear a bit of a cost that impacts other people, since you are contributing to the congestion, when you are in traffic. To combat congestion, some cities institute congestion pricing, which requires drivers to pay to access busier roads. Stockholm, Singapore, and London, among others, have implemented it with much success, including increased revenue and reduced congestion. In OS there is a big imbalance between the cost of opening an issue and the amount of work it creates. A lot of misconceptions in OS around cost exist, but the one cost we leave out is the servicing cost to maintainers, which is not free!
When to define governance:
Physical and digital infrastructure or building a dam/ Start a new Open Source project (one of the most beautiful things about OS, you can always start a project if you want). Open Source devs sometimes start without long term planning, which can lead to difficulties down the line when the project grows and has an entire community around it. We need to create more spaces for OS to meet, talk and share with each other.
For example, Japan didn't have sewage systems in the 1950's and it solved this problem in a decade or two without disrupting their communities, that means that humans can make progress quickly when they want to!
How to find hope:
The history of cities should give those of us in open source hope. While OSS communities face major challenges, from governance to funding to limited resources, urban communities have overcome issues like these before. After all, cities have had 10,000 years (give or take a millennium) to figure it out, and they still have more to learn. Open source has only just begun.



Building an open source community from the ground up
Stefan Fejes - UI Engineer, 30 Seconds
Wonder what's it's like to grow one of the fastest growing open source projects before graduating from high school? Since it's release, 30secondsofcode.org was nominated as the 6th fastest growing open source project by GitHub in 2018, gathered over 45,000 stars, made it to Hacktoberfest trending lists, and started series of education projects used by thousands of developers daily. Growing an organization of this size isn't easy, especially when a newbie is running it. Stefan will share some of his most inspiring and challenging moments of running the organization—and share tips for maintainers and teams starting their own open source projects.

This was a really engaging session and it had a lot of people there, so I couldn't sit down to take notes! He did talk a lot about how you make it easy for people to contribute to a project, documentation and onboarding and all that can be found on their website (smile) Also, one of the key things that stuck with me was "Be nice to everybody!", we need more of that in tech! (heart)


